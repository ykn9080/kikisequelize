openapi: 3.0.1
info:
  title: Dentone API
  swagger: 2.0
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: http://localhost:80
    # description: local test

tags:
  # - name: notice
  #   description: notice 게시판
  #   externalDocs:
  #     url: http://docs.my-api.com/pet-operations.htm
  # - name: type
  #   description: Access to tb_type
  #   externalDocs:
  #     url: http://docs.my-api.com/store-orders.htm
  - name: notice
    description: 게시판
  # - name: couponHistory
  #   description: coupon charge/use log
  # - name: procedure
  #   description: Access to all procedures
  #   externalDocs:
  #     url: http://docs.my-api.com/store-orders.htm
paths:
  /api/notice:
    get:
      summary: notice list.
      description:
      tags:
        - notice
      responses:
        "200": # status code
          description: A JSON array of notice info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notice"
    post:
      summary: Creates a new notice.
      tags:
        - notice
      requestBody:
        $ref: "./notice.yaml#/components/requestBodies/NoticeBody"
      responses:
        "200": # status code
          description: OK
  /api/doctor/{id}:
    get:
      summary: Returns a doctor by ID.
      tags:
        - doctor
      parameters:
        - $ref: "./doctor.yaml#/components/parameters/idParam"
      responses:
        "200": # status code
          description: A JSON array of doctor info
          content:
            application/json:
              schema:
                #$ref: "#/components/schemas/Tutorial"

                $ref: "./doctor.yaml#/components/schemas/Doctor"
    delete:
      description: Delete doctor
      tags:
        - doctor
      parameters:
        - $ref: "./doctor.yaml#/components/parameters/idParam"
      responses:
        200:
          description: doctor that was deleted
    put:
      summary: Update a doctor
      tags:
        - doctor
      parameters:
        - $ref: "./doctor.yaml#/components/parameters/idParam"
      requestBody:
        $ref: "./doctor.yaml#/components/requestBodies/DoctorBody"
      responses:
        200:
          description: doctor successfully updated.

  /api/tutorial:
    get:
      summary: tutorial.
      description: tutorial info.
      tags:
        - tutorial
      responses:
        "200": # status code
          description: A JSON array of patient info
          content:
            application/json:
              schema:
                $ref: "./swaggerComponents/components/schemas/Tutorial"
    post:
      summary: Creates a new tutorial.
      tags:
        - tutorial
      requestBody:
        $ref: "#/components/requestBodies/TutorialBody"
      responses:
        "200": # status code
          description: OK
  /api/tutorial/{id}:
    get:
      summary: Returns a tutorial by ID.
      tags:
        - tutorial
      parameters:
        - $ref: "#/components/parameters/idParam"
      responses:
        "200": # status code
          description: A JSON array of patient info
          content:
            application/json:
              schema:
                #$ref: "#/components/schemas/Tutorial"

                $ref: "./swaggerComponents.yaml/components/schemas/Tutorial"
    delete:
      description: Delete tutorial
      tags:
        - tutorial
      parameters:
        - $ref: "#/components/parameters/idParam"
      responses:
        200:
          description: tutorial that was deleted
    put:
      summary: Update a tutorial
      tags:
        - tutorial
      parameters:
        - $ref: "#/components/parameters/idParam"
      requestBody:
        $ref: "#/components/requestBodies/TutorialBody"
      responses:
        200:
          description: tutorial successfully updated.
  /proc:
    get:
      summary: 환자정보.
      description: 환자 개인별 세부정보.
      tags:
        - procedure
      parameters:
        - $ref: "#/components/parameters/idQueryParam"
      responses:
        "200":
          description: A JSON array of patient info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
  /api/type:
    get:
      summary: tb_type.
      description: type info.
      tags:
        - type
      responses:
        "200":
          description: A JSON array of type info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Type"
    post:
      summary: Creates a new type.
      tags:
        - type
      requestBody:
        $ref: "#/components/requestBodies/TypeBody"
      responses:
        "200":
          description: OK

components:
  requestBodies:
    TutorialBody:
      description: A JSON object containing tutorial information
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tutorial"
          example: # Child of media type because we use $ref above
            title: tutorial test
            description: This is swagger post test
            published: false
    DoctorBody:
      description: A JSON object containing doctor information
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/doctor"
          example:
            created_date: 10-17-2021 15:40:10
            modified_date: 10-17-2021 15:40:10
            login_id: cuidemin@diorco.co.kr
            login_pw: 1qazXSW@
            parent_id: 0
            coupon: 500
    TypeBody:
      description: A JSON object containing type information
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/type"
          example: # Child of media type because we use $ref above
            created_date: 10-17-2021 15:40:10
            modified_date: 10-17-2021 15:40:10
            table_name: young
  schemas:
    Patient:
      type: object
      properties:
        patient_id:
          type: integer
          format: int64
          example: 4
        created_date:
          type: datetime
          example: 2022-01-01
        modified_date:
          type: datetime
          example: 2022-01-01
        id:
          type: integer
          format: int64
          example: 4
        name:
          type: string
          example: Jessica Johns
        gender:
          type: string
          example: male
        birthday:
          type: datetime
          example: 2022-01-01
        rade_id:
          type: integer
          format: int64
          example: 4
        account_dr_id:
          type: integer
          format: int64
          example: 4
    Notice:
      type: object
      properties:
        contents:
          type: string
          example: This is body
        created_date:
          type: datetime
          example: 2022-01-01
        file:
          type: file
        title:
          type: string
          example: Simple notice!!
        category:
          type: string
          example: COMPANY 
        company_id:
          type: int
          example: 1
        place_id:
          type: int
          example: 1
        route_id:
          type: int
          example: 20
        hit:
          type: int
          example: 1   
        writer_id:
          type: int
          example: 1     
        piclinkarray:
          type: string
          example: ["222/img1.jpg","222/img2.jpg"]
        youtubearray:
          type: string
          example: ["https://www.youtube.com/watch?v=c64aupy8WhY"]
        urgent:
          type: boolean
          example: false                  
    Tutorial: 
      type: object
      properties:
        title:
          type: string
          example: Jessica Johns
        description:
          type: string
          example: Jessica Johns
        published:
          type: boolean
          example: true
    Doctor:
      type: object
      properties:
        created_date:
          type: datetime
          example: 2022-01-01
        updated_date:
          type: datetime
          example: 2022-01-01
        contents:
          type: string
          example: Jessica Johns
        date:
          type: datetime
          example: 2022-01-01
          type: string
        file:
          type: 
        parent_id:
          type: integer
          example: 19
        coupon:
          type: integer
          example: 500
    Type:
      type: object
      properties:
        type_id:
          type: integer
          format: int64
          example: 4
        created_date:
          type: datetime
          example: 2022-01-01
        modified_date:
          type: datetime
          example: 2022-01-01
        table_name:
          type: string
          example: good
  parameters:
    idParam: # Can be referenced via '#/components/parameters/idParam'
      in: path
      name: id
      description: autoIncremental id
      required: true
      schema:
        type: integer
        format: int32
        default: 1
        example: 13
    idQueryParam: # Can be referenced via '#/components/parameters/idQueryParam'
      in: query
      name: id
      description: autoIncremental id
      required: true
      schema:
        type: integer
        format: int32
        default: 1
